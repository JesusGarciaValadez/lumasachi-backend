{
    "openapi": "3.1.0",
    "info": {
        "title": "Lumasachi API Documentation",
        "version": "0.0.1"
    },
    "servers": [
        {
            "url": "https://localhost/api/v1",
            "description": "Local"
        },
        {
            "url": "https://lumasachi-backend-development-bh7mab.laravel.cloud/api/v1",
            "description": "Staging"
        }
    ],
    "paths": {
        "/orders/{order}/attachments": {
            "get": {
                "operationId": "orders.attachments.index",
                "summary": "Get attachments for an order",
                "tags": [
                    "Attachment"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "order_id": {
                                            "type": "integer"
                                        },
                                        "attachments": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AttachmentResource"
                                            }
                                        },
                                        "total_size": {
                                            "type": "integer"
                                        },
                                        "total_size_formatted": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "order_id",
                                        "attachments",
                                        "total_size",
                                        "total_size_formatted"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "orders.attachments.store",
                "summary": "Upload an attachment to an order",
                "tags": [
                    "Attachment"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadAttachmentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to upload file."
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "File uploaded successfully."
                                            ]
                                        },
                                        "attachment": {
                                            "$ref": "#/components/schemas/AttachmentResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "attachment"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/attachments/{attachment}/download": {
            "get": {
                "operationId": "attachments.download",
                "summary": "Download an attachment",
                "tags": [
                    "Attachment"
                ],
                "parameters": [
                    {
                        "name": "attachment",
                        "in": "path",
                        "required": true,
                        "description": "The attachment UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return file download response",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        },
                        "headers": {
                            "Content-Disposition": {
                                "required": true,
                                "schema": {
                                    "type": "string"
                                },
                                "example": "attachment"
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Unauthorized to download this attachment."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/attachments/{attachment}/preview": {
            "get": {
                "operationId": "attachments.preview",
                "summary": "Preview an attachment (for images and PDFs)",
                "tags": [
                    "Attachment"
                ],
                "parameters": [
                    {
                        "name": "attachment",
                        "in": "path",
                        "required": true,
                        "description": "The attachment UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "This file type cannot be previewed."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Unauthorized to preview this attachment."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/attachments/{attachment}": {
            "delete": {
                "operationId": "attachments.destroy",
                "summary": "Delete an attachment",
                "tags": [
                    "Attachment"
                ],
                "parameters": [
                    {
                        "name": "attachment",
                        "in": "path",
                        "required": true,
                        "description": "The attachment UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Failed to delete attachment."
                                            ]
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "error"
                                    ]
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Attachment deleted successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "Unauthorized to delete this attachment."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        },
                                        {
                                            "type": "object",
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "enum": [
                                                        "This attachment does not belong to an order."
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "operationId": "logout",
                "summary": "Destroy an authenticated session",
                "tags": [
                    "AuthenticatedSession"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "operationId": "authenticatedSession.store",
                "summary": "Handle an incoming authentication request",
                "tags": [
                    "AuthenticatedSession"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "operationId": "category.index",
                "summary": "Display a listing of the resource",
                "tags": [
                    "Category"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/categories/bulk": {
            "post": {
                "operationId": "category.storeBulk",
                "summary": "Store a newly created resource in storage",
                "tags": [
                    "Category"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoriesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Categories created successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/categories/{category}": {
            "delete": {
                "operationId": "category.destroy",
                "summary": "Remove the specified resource from storage",
                "tags": [
                    "Category"
                ],
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "description": "The category UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Category deleted successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/confirm-password": {
            "post": {
                "operationId": "confirmablePassword.store",
                "summary": "Confirm the user's password",
                "tags": [
                    "ConfirmablePassword"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/email/verification-notification": {
            "post": {
                "operationId": "verification.send",
                "summary": "Send a new email verification notification",
                "tags": [
                    "EmailVerificationNotification"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/verify-email": {
            "get": {
                "operationId": "verification.notice",
                "summary": "Show the email verification prompt page",
                "tags": [
                    "EmailVerificationPrompt"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/up": {
            "get": {
                "operationId": "health.up",
                "summary": "Simple health check endpoint.\nReturns basic API status",
                "tags": [
                    "Health"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "up"
                                            ]
                                        },
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "API is operational"
                                            ]
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "environment": {
                                            "type": "string"
                                        },
                                        "version": {
                                            "type": "string"
                                        },
                                        "php_version": {
                                            "type": "string"
                                        },
                                        "laravel_version": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "status",
                                        "message",
                                        "timestamp",
                                        "environment",
                                        "version",
                                        "php_version",
                                        "laravel_version"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "operationId": "health.check",
                "summary": "Comprehensive health check endpoint.\nChecks various system components and returns detailed status",
                "tags": [
                    "Health"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "operationId": "password.store",
                "summary": "Handle an incoming new password request",
                "tags": [
                    "NewPassword"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "password_confirmation": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "operationId": "orders.index",
                "summary": "Display a listing of all orders",
                "tags": [
                    "Order"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `OrderResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderResource"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "orders.store",
                "summary": "Store a newly created order in storage",
                "tags": [
                    "Order"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order created successfully."
                                            ]
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/OrderResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "order"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/orders/{order}": {
            "get": {
                "operationId": "orders.show",
                "summary": "Display the specified order",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "`OrderResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "put": {
                "operationId": "orders.update",
                "summary": "Update the specified order in storage",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order updated successfully."
                                            ]
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/OrderResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "order"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            },
            "delete": {
                "operationId": "orders.destroy",
                "summary": "Remove the specified order from storage",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order deleted successfully."
                                            ]
                                        }
                                    },
                                    "required": [
                                        "message"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/orders/{order}/status": {
            "post": {
                "operationId": "orders.status.update",
                "summary": "Update the status of an order",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateOrderStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order status updated successfully."
                                            ]
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/OrderResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "order"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/orders/{order}/assign": {
            "post": {
                "operationId": "orders.assign",
                "summary": "Assign an order to an employee",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AssignOrderRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "enum": [
                                                "Order assigned successfully."
                                            ]
                                        },
                                        "order": {
                                            "$ref": "#/components/schemas/OrderResource"
                                        }
                                    },
                                    "required": [
                                        "message",
                                        "order"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/orders/{order}/history": {
            "get": {
                "operationId": "orders.history",
                "summary": "Get the history of an order",
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "field",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `OrderHistoryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/OrderHistoryResource"
                                            }
                                        },
                                        "links": {
                                            "type": "object",
                                            "properties": {
                                                "first": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "last": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "prev": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                },
                                                "next": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "first",
                                                "last",
                                                "prev",
                                                "next"
                                            ]
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "from": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ]
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "links": {
                                                    "type": "array",
                                                    "description": "Generated paginator links.",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "url": {
                                                                "type": [
                                                                    "string",
                                                                    "null"
                                                                ]
                                                            },
                                                            "label": {
                                                                "type": "string"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "required": [
                                                            "url",
                                                            "label",
                                                            "active"
                                                        ]
                                                    }
                                                },
                                                "path": {
                                                    "type": [
                                                        "string",
                                                        "null"
                                                    ],
                                                    "description": "Base path for paginator generated URLs."
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "description": "Number of items shown per page."
                                                },
                                                "to": {
                                                    "type": [
                                                        "integer",
                                                        "null"
                                                    ],
                                                    "description": "Number of the last item in the slice."
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of items being paginated."
                                                }
                                            },
                                            "required": [
                                                "current_page",
                                                "from",
                                                "last_page",
                                                "links",
                                                "path",
                                                "per_page",
                                                "to",
                                                "total"
                                            ]
                                        }
                                    },
                                    "required": [
                                        "data",
                                        "meta",
                                        "links"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/history": {
            "get": {
                "operationId": "orderHistory.index",
                "summary": "Display a listing of order histories",
                "tags": [
                    "OrderHistory"
                ],
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated set of `OrderHistoryResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OrderHistoryResource"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "post": {
                "operationId": "orderHistory.store",
                "summary": "Store a newly created order history",
                "tags": [
                    "OrderHistory"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreOrderHistoryRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/OrderHistoryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/history/{orderHistory}": {
            "get": {
                "operationId": "orderHistory.show",
                "summary": "Display the specified order history",
                "tags": [
                    "OrderHistory"
                ],
                "parameters": [
                    {
                        "name": "orderHistory",
                        "in": "path",
                        "required": true,
                        "description": "The order history UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/OrderHistoryResource"
                                        }
                                    },
                                    "required": [
                                        "data"
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            },
            "delete": {
                "operationId": "orderHistory.destroy",
                "summary": "Remove the specified order history",
                "tags": [
                    "OrderHistory"
                ],
                "parameters": [
                    {
                        "name": "orderHistory",
                        "in": "path",
                        "required": true,
                        "description": "The order history UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/history/{orderHistory}/order/{order}": {
            "get": {
                "operationId": "orderHistory.order",
                "summary": "Get the order associated with this history entry",
                "tags": [
                    "OrderHistory"
                ],
                "parameters": [
                    {
                        "name": "orderHistory",
                        "in": "path",
                        "required": true,
                        "description": "The order history UUID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "order": {
                                            "$ref": "#/components/schemas/OrderResource"
                                        }
                                    },
                                    "required": [
                                        "order"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/history/{orderHistory}/order/{order}/attachments": {
            "get": {
                "operationId": "orderHistory.orderAttachments",
                "summary": "Get attachments for the order associated with this history entry",
                "tags": [
                    "OrderHistory"
                ],
                "parameters": [
                    {
                        "name": "orderHistory",
                        "in": "path",
                        "required": true,
                        "description": "The order history UUID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order",
                        "in": "path",
                        "required": true,
                        "description": "The order UUID",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "attachments": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AttachmentResource"
                                            }
                                        }
                                    },
                                    "required": [
                                        "attachments"
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/ModelNotFoundException"
                    },
                    "403": {
                        "$ref": "#/components/responses/AuthorizationException"
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "operationId": "password.email",
                "summary": "Handle an incoming password reset link request",
                "tags": [
                    "PasswordResetLink"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "required": [
                                    "email"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "operationId": "registeredUser.store",
                "description": "\u26a0\ufe0f Cannot generate request documentation: Undefined constant App\\Models\\User::class",
                "summary": "Handle an incoming registration request",
                "tags": [
                    "RegisteredUser"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "$ref": "#/components/responses/ValidationException"
                    }
                }
            }
        },
        "/users/employees": {
            "get": {
                "operationId": "users.employees",
                "summary": "Get employees of the authenticated user's company",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `UserResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/users/customers": {
            "get": {
                "operationId": "users.customers",
                "summary": "Get customers: users from a different company than the authenticated user's company",
                "tags": [
                    "Users"
                ],
                "responses": {
                    "200": {
                        "description": "Array of `UserResource`",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/AuthenticationException"
                    }
                }
            }
        },
        "/verify-email/{id}/{hash}": {
            "get": {
                "operationId": "verification.verify",
                "summary": "Mark the authenticated user's email address as verified",
                "tags": [
                    "VerifyEmail"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AssignOrderRequest": {
                "type": "object",
                "properties": {
                    "assigned_to": {
                        "type": "integer"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 500
                    }
                },
                "required": [
                    "assigned_to"
                ],
                "title": "AssignOrderRequest"
            },
            "AttachmentResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "attachable_type": {
                        "type": "string"
                    },
                    "attachable_id": {
                        "type": "integer"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "file_path": {
                        "type": "string"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    },
                    "human_file_size": {
                        "type": "string"
                    },
                    "uploaded_by": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "url": {
                        "type": "string"
                    },
                    "is_image": {
                        "type": "boolean"
                    },
                    "is_document": {
                        "type": "boolean"
                    },
                    "is_pdf": {
                        "type": "boolean"
                    },
                    "extension": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "uuid",
                    "attachable_type",
                    "attachable_id",
                    "file_name",
                    "file_path",
                    "mime_type",
                    "file_size",
                    "human_file_size",
                    "created_at",
                    "updated_at",
                    "url",
                    "is_image",
                    "is_document",
                    "is_pdf",
                    "extension"
                ],
                "title": "AttachmentResource"
            },
            "CategoryResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "sort_order": {
                        "type": "integer"
                    },
                    "color": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "updated_by": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "uuid",
                    "name",
                    "description",
                    "is_active",
                    "sort_order",
                    "color",
                    "created_at",
                    "updated_at"
                ],
                "title": "CategoryResource"
            },
            "LoginRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ],
                "title": "LoginRequest"
            },
            "OrderHistoryResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "order_id": {
                        "type": "integer"
                    },
                    "field_changed": {
                        "type": "string"
                    },
                    "old_value": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "new_value": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "comment": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "integer"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "attachments": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "minItems": 0,
                                "maxItems": 0,
                                "additionalItems": false
                            },
                            {
                                "type": "array",
                                "prefixItems": [
                                    {
                                        "$ref": "#/components/schemas/AttachmentResource"
                                    }
                                ],
                                "minItems": 1,
                                "maxItems": 1,
                                "additionalItems": false
                            }
                        ]
                    }
                },
                "required": [
                    "id",
                    "uuid",
                    "order_id",
                    "field_changed",
                    "old_value",
                    "new_value",
                    "comment",
                    "description",
                    "created_by",
                    "created_at",
                    "attachments"
                ],
                "title": "OrderHistoryResource"
            },
            "OrderPriority": {
                "type": "string",
                "enum": [
                    "Low",
                    "Normal",
                    "High",
                    "Urgent"
                ],
                "title": "OrderPriority"
            },
            "OrderResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "customer": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "status": {
                        "$ref": "#/components/schemas/OrderStatus"
                    },
                    "priority": {
                        "$ref": "#/components/schemas/OrderPriority"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryResource"
                        }
                    },
                    "estimated_completion": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "actual_completion": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_by": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "updated_by": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "assigned_to": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "uuid",
                    "title",
                    "description",
                    "status",
                    "priority",
                    "estimated_completion",
                    "actual_completion",
                    "notes",
                    "created_at",
                    "updated_at"
                ],
                "title": "OrderResource"
            },
            "OrderStatus": {
                "type": "string",
                "enum": [
                    "Open",
                    "In Progress",
                    "Ready for delivery",
                    "Completed",
                    "Delivered",
                    "Paid",
                    "Returned",
                    "Not paid",
                    "On hold",
                    "Cancelled"
                ],
                "title": "OrderStatus"
            },
            "StoreCategoriesRequest": {
                "type": "object",
                "properties": {
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "maxLength": 255
                                },
                                "description": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "is_active": {
                                    "type": [
                                        "boolean",
                                        "null"
                                    ]
                                }
                            },
                            "required": [
                                "name"
                            ]
                        }
                    }
                },
                "required": [
                    "categories"
                ],
                "title": "StoreCategoriesRequest"
            },
            "StoreOrderHistoryRequest": {
                "type": "object",
                "properties": {
                    "order_id": {
                        "type": "integer"
                    },
                    "field_changed": {
                        "type": "string",
                        "enum": [
                            "status",
                            "priority",
                            "title",
                            "category_id",
                            "assigned_to",
                            "estimated_completion",
                            "notes"
                        ]
                    },
                    "old_value": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "new_value": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "comment": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 1000
                    }
                },
                "required": [
                    "order_id",
                    "field_changed"
                ],
                "title": "StoreOrderHistoryRequest"
            },
            "StoreOrderRequest": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Open",
                            "In Progress",
                            "Ready for delivery",
                            "Delivered",
                            "Completed",
                            "Paid",
                            "Returned",
                            "Not paid",
                            "On hold",
                            "Cancelled"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "Low",
                            "Normal",
                            "High",
                            "Urgent"
                        ]
                    },
                    "estimated_completion": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "actual_completion": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "assigned_to": {
                        "type": "integer"
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "customer_id",
                    "title",
                    "description",
                    "status",
                    "priority",
                    "assigned_to",
                    "categories"
                ],
                "title": "StoreOrderRequest"
            },
            "UpdateOrderRequest": {
                "type": "object",
                "properties": {
                    "customer_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Open",
                            "In Progress",
                            "Ready for delivery",
                            "Delivered",
                            "Paid",
                            "Returned",
                            "Not paid",
                            "Cancelled"
                        ]
                    },
                    "priority": {
                        "type": "string",
                        "enum": [
                            "Low",
                            "Normal",
                            "High",
                            "Urgent"
                        ]
                    },
                    "estimated_completion": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "actual_completion": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "assigned_to": {
                        "type": "integer"
                    },
                    "categories": {
                        "type": "array",
                        "description": "'category_id' => 'sometimes|required|exists:categories,id',",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "title": "UpdateOrderRequest"
            },
            "UpdateOrderStatusRequest": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Open",
                            "In Progress",
                            "Ready for delivery",
                            "Delivered",
                            "Paid",
                            "Returned",
                            "Not paid",
                            "Cancelled",
                            "On hold",
                            "Completed"
                        ]
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 500
                    }
                },
                "required": [
                    "status"
                ],
                "title": "UpdateOrderStatusRequest"
            },
            "UploadAttachmentRequest": {
                "type": "object",
                "properties": {
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "contentMediaType": "application/octet-stream",
                        "maxLength": 10240
                    },
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 500
                    }
                },
                "required": [
                    "file"
                ],
                "title": "UploadAttachmentRequest"
            },
            "UserResource": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "company_uuid": {
                        "type": "string"
                    },
                    "company_name": {
                        "type": "string"
                    },
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "full_name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "email_verified_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "role": {
                        "$ref": "#/components/schemas/UserRole"
                    },
                    "type": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/UserType"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "preferences": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "phone_number": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "notes": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "required": [
                    "id",
                    "uuid",
                    "first_name",
                    "last_name",
                    "full_name",
                    "email",
                    "email_verified_at",
                    "role",
                    "type",
                    "is_active",
                    "preferences",
                    "phone_number",
                    "notes",
                    "created_at",
                    "updated_at"
                ],
                "title": "UserResource"
            },
            "UserRole": {
                "type": "string",
                "enum": [
                    "Super Administrator",
                    "Administrator",
                    "Employee",
                    "Customer"
                ],
                "title": "UserRole"
            },
            "UserType": {
                "type": "string",
                "enum": [
                    "Individual",
                    "Business"
                ],
                "title": "UserType"
            }
        },
        "responses": {
            "AuthenticationException": {
                "description": "Unauthenticated",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "ValidationException": {
                "description": "Validation error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Errors overview."
                                },
                                "errors": {
                                    "type": "object",
                                    "description": "A detailed description of each field that failed validation.",
                                    "additionalProperties": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": [
                                "message",
                                "errors"
                            ]
                        }
                    }
                }
            },
            "ModelNotFoundException": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            },
            "AuthorizationException": {
                "description": "Authorization error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "description": "Error overview."
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                }
            }
        }
    }
}